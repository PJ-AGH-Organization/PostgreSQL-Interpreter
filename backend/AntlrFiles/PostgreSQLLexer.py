# Generated from PostgreSQL.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,70,507,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,
        65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,1,0,1,0,1,1,1,1,
        1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,5,1,6,1,6,1,7,1,7,1,7,1,8,1,8,
        1,9,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,14,1,
        15,1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,17,1,
        17,1,17,1,17,1,17,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,19,1,
        20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,21,1,22,1,
        22,1,22,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,
        24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,
        26,1,26,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,28,1,
        28,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,31,1,
        31,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,
        33,1,33,1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,34,1,34,1,35,1,
        35,1,35,1,35,1,36,1,36,1,36,1,36,1,36,1,37,1,37,1,37,1,37,1,37,1,
        37,1,37,1,38,1,38,1,38,1,38,1,39,1,39,1,39,1,39,1,39,1,40,1,40,1,
        40,1,40,1,40,1,40,1,40,1,40,1,41,1,41,1,41,1,41,1,42,1,42,1,42,1,
        42,1,42,1,42,1,42,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,44,1,
        44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,45,1,45,1,45,1,
        45,1,45,1,45,1,45,1,45,1,46,1,46,1,46,1,46,1,47,1,47,1,47,1,47,1,
        47,1,47,1,47,1,47,1,48,1,48,1,48,1,48,1,48,1,49,1,49,1,49,1,49,1,
        49,1,49,1,49,1,49,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,51,1,
        51,1,51,1,51,1,51,1,52,1,52,1,52,1,52,1,52,1,52,1,53,1,53,1,53,1,
        53,1,53,1,54,1,54,1,54,1,54,1,54,1,54,1,55,1,55,1,55,1,55,1,55,1,
        55,1,56,1,56,1,56,1,56,1,57,1,57,1,57,1,57,1,58,1,58,1,58,1,58,1,
        59,1,59,1,59,1,59,1,60,1,60,1,60,1,60,1,60,1,60,1,61,1,61,1,61,1,
        61,1,61,1,62,1,62,1,62,1,62,1,62,1,62,1,63,1,63,1,63,1,63,1,63,1,
        64,1,64,1,64,1,64,1,64,1,64,1,65,1,65,1,65,1,66,1,66,5,66,472,8,
        66,10,66,12,66,475,9,66,1,67,1,67,1,67,1,67,5,67,481,8,67,10,67,
        12,67,484,9,67,1,67,1,67,1,68,4,68,489,8,68,11,68,12,68,490,1,68,
        1,68,4,68,495,8,68,11,68,12,68,496,3,68,499,8,68,1,69,4,69,502,8,
        69,11,69,12,69,503,1,69,1,69,0,0,70,1,1,3,2,5,3,7,4,9,5,11,6,13,
        7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,
        37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,
        59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,
        81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,101,
        51,103,52,105,53,107,54,109,55,111,56,113,57,115,58,117,59,119,60,
        121,61,123,62,125,63,127,64,129,65,131,66,133,67,135,68,137,69,139,
        70,1,0,30,2,0,83,83,115,115,2,0,69,69,101,101,2,0,76,76,108,108,
        2,0,67,67,99,99,2,0,84,84,116,116,2,0,70,70,102,102,2,0,82,82,114,
        114,2,0,79,79,111,111,2,0,77,77,109,109,2,0,74,74,106,106,2,0,73,
        73,105,105,2,0,78,78,110,110,2,0,85,85,117,117,2,0,71,71,103,103,
        2,0,87,87,119,119,2,0,72,72,104,104,2,0,80,80,112,112,2,0,66,66,
        98,98,2,0,89,89,121,121,2,0,65,65,97,97,2,0,86,86,118,118,2,0,68,
        68,100,100,2,0,75,75,107,107,2,0,81,81,113,113,2,0,88,88,120,120,
        3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,2,0,39,39,92,
        92,1,0,48,57,3,0,9,10,13,13,32,32,513,0,1,1,0,0,0,0,3,1,0,0,0,0,
        5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,
        1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,
        1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,
        1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,
        1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,
        1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,
        1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,
        1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,
        1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,
        1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,
        105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,
        0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,
        1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,
        0,133,1,0,0,0,0,135,1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,0,1,141,1,
        0,0,0,3,143,1,0,0,0,5,145,1,0,0,0,7,147,1,0,0,0,9,149,1,0,0,0,11,
        151,1,0,0,0,13,154,1,0,0,0,15,156,1,0,0,0,17,159,1,0,0,0,19,161,
        1,0,0,0,21,164,1,0,0,0,23,166,1,0,0,0,25,168,1,0,0,0,27,170,1,0,
        0,0,29,172,1,0,0,0,31,174,1,0,0,0,33,181,1,0,0,0,35,186,1,0,0,0,
        37,191,1,0,0,0,39,194,1,0,0,0,41,200,1,0,0,0,43,206,1,0,0,0,45,212,
        1,0,0,0,47,215,1,0,0,0,49,222,1,0,0,0,51,228,1,0,0,0,53,234,1,0,
        0,0,55,241,1,0,0,0,57,246,1,0,0,0,59,253,1,0,0,0,61,260,1,0,0,0,
        63,264,1,0,0,0,65,271,1,0,0,0,67,278,1,0,0,0,69,284,1,0,0,0,71,290,
        1,0,0,0,73,294,1,0,0,0,75,299,1,0,0,0,77,306,1,0,0,0,79,310,1,0,
        0,0,81,315,1,0,0,0,83,323,1,0,0,0,85,327,1,0,0,0,87,334,1,0,0,0,
        89,342,1,0,0,0,91,353,1,0,0,0,93,361,1,0,0,0,95,365,1,0,0,0,97,373,
        1,0,0,0,99,378,1,0,0,0,101,386,1,0,0,0,103,394,1,0,0,0,105,399,1,
        0,0,0,107,405,1,0,0,0,109,410,1,0,0,0,111,416,1,0,0,0,113,422,1,
        0,0,0,115,426,1,0,0,0,117,430,1,0,0,0,119,434,1,0,0,0,121,438,1,
        0,0,0,123,444,1,0,0,0,125,449,1,0,0,0,127,455,1,0,0,0,129,460,1,
        0,0,0,131,466,1,0,0,0,133,469,1,0,0,0,135,476,1,0,0,0,137,488,1,
        0,0,0,139,501,1,0,0,0,141,142,5,40,0,0,142,2,1,0,0,0,143,144,5,41,
        0,0,144,4,1,0,0,0,145,146,5,44,0,0,146,6,1,0,0,0,147,148,5,61,0,
        0,148,8,1,0,0,0,149,150,5,46,0,0,150,10,1,0,0,0,151,152,5,33,0,0,
        152,153,5,61,0,0,153,12,1,0,0,0,154,155,5,60,0,0,155,14,1,0,0,0,
        156,157,5,60,0,0,157,158,5,61,0,0,158,16,1,0,0,0,159,160,5,62,0,
        0,160,18,1,0,0,0,161,162,5,62,0,0,162,163,5,61,0,0,163,20,1,0,0,
        0,164,165,5,43,0,0,165,22,1,0,0,0,166,167,5,45,0,0,167,24,1,0,0,
        0,168,169,5,47,0,0,169,26,1,0,0,0,170,171,5,59,0,0,171,28,1,0,0,
        0,172,173,5,42,0,0,173,30,1,0,0,0,174,175,7,0,0,0,175,176,7,1,0,
        0,176,177,7,2,0,0,177,178,7,1,0,0,178,179,7,3,0,0,179,180,7,4,0,
        0,180,32,1,0,0,0,181,182,7,5,0,0,182,183,7,6,0,0,183,184,7,7,0,0,
        184,185,7,8,0,0,185,34,1,0,0,0,186,187,7,9,0,0,187,188,7,7,0,0,188,
        189,7,10,0,0,189,190,7,11,0,0,190,36,1,0,0,0,191,192,7,7,0,0,192,
        193,7,11,0,0,193,38,1,0,0,0,194,195,7,12,0,0,195,196,7,0,0,0,196,
        197,7,10,0,0,197,198,7,11,0,0,198,199,7,13,0,0,199,40,1,0,0,0,200,
        201,7,14,0,0,201,202,7,15,0,0,202,203,7,1,0,0,203,204,7,6,0,0,204,
        205,7,1,0,0,205,42,1,0,0,0,206,207,7,13,0,0,207,208,7,6,0,0,208,
        209,7,7,0,0,209,210,7,12,0,0,210,211,7,16,0,0,211,44,1,0,0,0,212,
        213,7,17,0,0,213,214,7,18,0,0,214,46,1,0,0,0,215,216,7,15,0,0,216,
        217,7,19,0,0,217,218,7,20,0,0,218,219,7,10,0,0,219,220,7,11,0,0,
        220,221,7,13,0,0,221,48,1,0,0,0,222,223,7,7,0,0,223,224,7,6,0,0,
        224,225,7,21,0,0,225,226,7,1,0,0,226,227,7,6,0,0,227,50,1,0,0,0,
        228,229,7,2,0,0,229,230,7,10,0,0,230,231,7,8,0,0,231,232,7,10,0,
        0,232,233,7,4,0,0,233,52,1,0,0,0,234,235,7,10,0,0,235,236,7,11,0,
        0,236,237,7,0,0,0,237,238,7,1,0,0,238,239,7,6,0,0,239,240,7,4,0,
        0,240,54,1,0,0,0,241,242,7,10,0,0,242,243,7,11,0,0,243,244,7,4,0,
        0,244,245,7,7,0,0,245,56,1,0,0,0,246,247,7,20,0,0,247,248,7,19,0,
        0,248,249,7,2,0,0,249,250,7,12,0,0,250,251,7,1,0,0,251,252,7,0,0,
        0,252,58,1,0,0,0,253,254,7,12,0,0,254,255,7,16,0,0,255,256,7,21,
        0,0,256,257,7,19,0,0,257,258,7,4,0,0,258,259,7,1,0,0,259,60,1,0,
        0,0,260,261,7,0,0,0,261,262,7,1,0,0,262,263,7,4,0,0,263,62,1,0,0,
        0,264,265,7,21,0,0,265,266,7,1,0,0,266,267,7,2,0,0,267,268,7,1,0,
        0,268,269,7,4,0,0,269,270,7,1,0,0,270,64,1,0,0,0,271,272,7,3,0,0,
        272,273,7,6,0,0,273,274,7,1,0,0,274,275,7,19,0,0,275,276,7,4,0,0,
        276,277,7,1,0,0,277,66,1,0,0,0,278,279,7,4,0,0,279,280,7,19,0,0,
        280,281,7,17,0,0,281,282,7,2,0,0,282,283,7,1,0,0,283,68,1,0,0,0,
        284,285,7,19,0,0,285,286,7,2,0,0,286,287,7,4,0,0,287,288,7,1,0,0,
        288,289,7,6,0,0,289,70,1,0,0,0,290,291,7,19,0,0,291,292,7,21,0,0,
        292,293,7,21,0,0,293,72,1,0,0,0,294,295,7,21,0,0,295,296,7,6,0,0,
        296,297,7,7,0,0,297,298,7,16,0,0,298,74,1,0,0,0,299,300,7,3,0,0,
        300,301,7,7,0,0,301,302,7,2,0,0,302,303,7,12,0,0,303,304,7,8,0,0,
        304,305,7,11,0,0,305,76,1,0,0,0,306,307,7,11,0,0,307,308,7,7,0,0,
        308,309,7,4,0,0,309,78,1,0,0,0,310,311,7,11,0,0,311,312,7,12,0,0,
        312,313,7,2,0,0,313,314,7,2,0,0,314,80,1,0,0,0,315,316,7,16,0,0,
        316,317,7,6,0,0,317,318,7,10,0,0,318,319,7,8,0,0,319,320,7,19,0,
        0,320,321,7,6,0,0,321,322,7,18,0,0,322,82,1,0,0,0,323,324,7,22,0,
        0,324,325,7,1,0,0,325,326,7,18,0,0,326,84,1,0,0,0,327,328,7,12,0,
        0,328,329,7,11,0,0,329,330,7,10,0,0,330,331,7,23,0,0,331,332,7,12,
        0,0,332,333,7,1,0,0,333,86,1,0,0,0,334,335,7,5,0,0,335,336,7,7,0,
        0,336,337,7,6,0,0,337,338,7,1,0,0,338,339,7,10,0,0,339,340,7,13,
        0,0,340,341,7,11,0,0,341,88,1,0,0,0,342,343,7,6,0,0,343,344,7,1,
        0,0,344,345,7,5,0,0,345,346,7,1,0,0,346,347,7,6,0,0,347,348,7,1,
        0,0,348,349,7,11,0,0,349,350,7,3,0,0,350,351,7,1,0,0,351,352,7,0,
        0,0,352,90,1,0,0,0,353,354,7,21,0,0,354,355,7,1,0,0,355,356,7,5,
        0,0,356,357,7,19,0,0,357,358,7,12,0,0,358,359,7,2,0,0,359,360,7,
        4,0,0,360,92,1,0,0,0,361,362,7,10,0,0,362,363,7,11,0,0,363,364,7,
        4,0,0,364,94,1,0,0,0,365,366,7,10,0,0,366,367,7,11,0,0,367,368,7,
        4,0,0,368,369,7,1,0,0,369,370,7,13,0,0,370,371,7,1,0,0,371,372,7,
        6,0,0,372,96,1,0,0,0,373,374,7,4,0,0,374,375,7,1,0,0,375,376,7,24,
        0,0,376,377,7,4,0,0,377,98,1,0,0,0,378,379,7,20,0,0,379,380,7,19,
        0,0,380,381,7,6,0,0,381,382,7,3,0,0,382,383,7,15,0,0,383,384,7,19,
        0,0,384,385,7,6,0,0,385,100,1,0,0,0,386,387,7,17,0,0,387,388,7,7,
        0,0,388,389,7,7,0,0,389,390,7,2,0,0,390,391,7,1,0,0,391,392,7,19,
        0,0,392,393,7,11,0,0,393,102,1,0,0,0,394,395,7,21,0,0,395,396,7,
        19,0,0,396,397,7,4,0,0,397,398,7,1,0,0,398,104,1,0,0,0,399,400,7,
        5,0,0,400,401,7,2,0,0,401,402,7,7,0,0,402,403,7,19,0,0,403,404,7,
        4,0,0,404,106,1,0,0,0,405,406,7,4,0,0,406,407,7,6,0,0,407,408,7,
        12,0,0,408,409,7,1,0,0,409,108,1,0,0,0,410,411,7,5,0,0,411,412,7,
        19,0,0,412,413,7,2,0,0,413,414,7,0,0,0,414,415,7,1,0,0,415,110,1,
        0,0,0,416,417,7,3,0,0,417,418,7,7,0,0,418,419,7,12,0,0,419,420,7,
        11,0,0,420,421,7,4,0,0,421,112,1,0,0,0,422,423,7,0,0,0,423,424,7,
        12,0,0,424,425,7,8,0,0,425,114,1,0,0,0,426,427,7,19,0,0,427,428,
        7,20,0,0,428,429,7,13,0,0,429,116,1,0,0,0,430,431,7,8,0,0,431,432,
        7,10,0,0,432,433,7,11,0,0,433,118,1,0,0,0,434,435,7,8,0,0,435,436,
        7,19,0,0,436,437,7,24,0,0,437,120,1,0,0,0,438,439,7,10,0,0,439,440,
        7,11,0,0,440,441,7,11,0,0,441,442,7,1,0,0,442,443,7,6,0,0,443,122,
        1,0,0,0,444,445,7,2,0,0,445,446,7,1,0,0,446,447,7,5,0,0,447,448,
        7,4,0,0,448,124,1,0,0,0,449,450,7,6,0,0,450,451,7,10,0,0,451,452,
        7,13,0,0,452,453,7,15,0,0,453,454,7,4,0,0,454,126,1,0,0,0,455,456,
        7,5,0,0,456,457,7,12,0,0,457,458,7,2,0,0,458,459,7,2,0,0,459,128,
        1,0,0,0,460,461,7,3,0,0,461,462,7,6,0,0,462,463,7,7,0,0,463,464,
        7,0,0,0,464,465,7,0,0,0,465,130,1,0,0,0,466,467,7,19,0,0,467,468,
        7,0,0,0,468,132,1,0,0,0,469,473,7,25,0,0,470,472,7,26,0,0,471,470,
        1,0,0,0,472,475,1,0,0,0,473,471,1,0,0,0,473,474,1,0,0,0,474,134,
        1,0,0,0,475,473,1,0,0,0,476,482,5,39,0,0,477,481,8,27,0,0,478,479,
        5,92,0,0,479,481,9,0,0,0,480,477,1,0,0,0,480,478,1,0,0,0,481,484,
        1,0,0,0,482,480,1,0,0,0,482,483,1,0,0,0,483,485,1,0,0,0,484,482,
        1,0,0,0,485,486,5,39,0,0,486,136,1,0,0,0,487,489,7,28,0,0,488,487,
        1,0,0,0,489,490,1,0,0,0,490,488,1,0,0,0,490,491,1,0,0,0,491,498,
        1,0,0,0,492,494,5,46,0,0,493,495,7,28,0,0,494,493,1,0,0,0,495,496,
        1,0,0,0,496,494,1,0,0,0,496,497,1,0,0,0,497,499,1,0,0,0,498,492,
        1,0,0,0,498,499,1,0,0,0,499,138,1,0,0,0,500,502,7,29,0,0,501,500,
        1,0,0,0,502,503,1,0,0,0,503,501,1,0,0,0,503,504,1,0,0,0,504,505,
        1,0,0,0,505,506,6,69,0,0,506,140,1,0,0,0,8,0,473,480,482,490,496,
        498,503,1,6,0,0
    ]

class PostgreSQLLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    SEMICOLON = 14
    STAR = 15
    SELECT = 16
    FROM = 17
    JOIN = 18
    ON = 19
    USING = 20
    WHERE = 21
    GROUP = 22
    BY = 23
    HAVING = 24
    ORDER = 25
    LIMIT = 26
    INSERT = 27
    INTO = 28
    VALUES = 29
    UPDATE = 30
    SET = 31
    DELETE = 32
    CREATE = 33
    TABLE = 34
    ALTER = 35
    ADD = 36
    DROP = 37
    COLUMN = 38
    NOT = 39
    NULL = 40
    PRIMARY = 41
    KEY = 42
    UNIQUE = 43
    FOREIGN = 44
    REFERENCES = 45
    DEFAULT = 46
    INT = 47
    INTEGER = 48
    TEXT = 49
    VARCHAR = 50
    BOOLEAN = 51
    DATE = 52
    FLOAT = 53
    TRUE = 54
    FALSE = 55
    COUNT = 56
    SUM = 57
    AVG = 58
    MIN = 59
    MAX = 60
    INNER = 61
    LEFT = 62
    RIGHT = 63
    FULL = 64
    CROSS = 65
    AS = 66
    IDENTIFIER = 67
    STRING = 68
    NUMBER = 69
    WS = 70

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'('", "')'", "','", "'='", "'.'", "'!='", "'<'", "'<='", "'>'", 
            "'>='", "'+'", "'-'", "'/'", "';'", "'*'" ]

    symbolicNames = [ "<INVALID>",
            "SEMICOLON", "STAR", "SELECT", "FROM", "JOIN", "ON", "USING", 
            "WHERE", "GROUP", "BY", "HAVING", "ORDER", "LIMIT", "INSERT", 
            "INTO", "VALUES", "UPDATE", "SET", "DELETE", "CREATE", "TABLE", 
            "ALTER", "ADD", "DROP", "COLUMN", "NOT", "NULL", "PRIMARY", 
            "KEY", "UNIQUE", "FOREIGN", "REFERENCES", "DEFAULT", "INT", 
            "INTEGER", "TEXT", "VARCHAR", "BOOLEAN", "DATE", "FLOAT", "TRUE", 
            "FALSE", "COUNT", "SUM", "AVG", "MIN", "MAX", "INNER", "LEFT", 
            "RIGHT", "FULL", "CROSS", "AS", "IDENTIFIER", "STRING", "NUMBER", 
            "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "SEMICOLON", 
                  "STAR", "SELECT", "FROM", "JOIN", "ON", "USING", "WHERE", 
                  "GROUP", "BY", "HAVING", "ORDER", "LIMIT", "INSERT", "INTO", 
                  "VALUES", "UPDATE", "SET", "DELETE", "CREATE", "TABLE", 
                  "ALTER", "ADD", "DROP", "COLUMN", "NOT", "NULL", "PRIMARY", 
                  "KEY", "UNIQUE", "FOREIGN", "REFERENCES", "DEFAULT", "INT", 
                  "INTEGER", "TEXT", "VARCHAR", "BOOLEAN", "DATE", "FLOAT", 
                  "TRUE", "FALSE", "COUNT", "SUM", "AVG", "MIN", "MAX", 
                  "INNER", "LEFT", "RIGHT", "FULL", "CROSS", "AS", "IDENTIFIER", 
                  "STRING", "NUMBER", "WS" ]

    grammarFileName = "PostgreSQL.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


